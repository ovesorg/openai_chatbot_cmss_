name: Dev Chatbot CI workflow

on:
  push:
    branches: ['fastapi']

env:
  IMAGE_NAME: ghcr.io/ovesorg/chatbot
  NAMESPACE: chatbot-namespace

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
          rm -rf .git

  build-and-push-docker-image:
    name: Build Docker image and push to GitHub Packages
    runs-on: ubuntu-latest
    needs: ['build']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
          push: true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: ['build-and-push-docker-image']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: v1.21.0

      - name: Set up Kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: Deploy to Kubernetes using Helm
        env:
          IMAGE_TAG: ${{ github.sha }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        run: |
          helm upgrade --install chatbot ./charts --namespace ${{ env.NAMESPACE }} -f ./charts/values.yaml --set image.tag=${IMAGE_TAG} --set openaiApiKey=${{ secrets.OPENAI_API_KEY }} --set pineconeApiKey=${{ secrets.PINECONE_API_KEY }}
